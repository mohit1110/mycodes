
/*
   CLOCK in Graphics
   Created  by *MOHIT*
   Date 16-04-21

*/
#include<stdio.h>
#include<dos.h>
#include<conio.h>
#include<time.h>
#include<graphics.h>

void clnum();
void circles();
int main()
{

 int s=0,m=0,h=0,k=0;
 int xcor[60]={300,314,326,340,355,370,381,392,402,412,420,428,434,435,440,440,440,438,434,430,424,414,408,396,384,372,358,345,330,315,300,285,270,255,240,226,216,206,195,185,176,172,167,163,161,160,160,162,167,173,180,188,195,205,218,228,240,255,270,285},
     ycor[60]={80,81,82,87,93,100,106,113,125,136,150,163,177,192,205,220,235,249,263,275,288,299,311,320,330,341,348,352,358,360,360,360,358,352,348,341,333,325,315,303,290,278,266,252,237,220,206,190,172,157,148,137,125,115,108,98,91,87,82,80};

  char *tim=NULL;
  char hh[3],mm[3],ss[3];
  int hour=0,min=0,sec=0;

 int gd=DETECT,gm;
 char *gp="C:\\TC\\BGI";

   time_t *tmm;
  time(tmm);


 initgraph(&gd,&gm,gp);
 setbkcolor(9);
 setcolor(10);

 circles();
 clnum();

 tim=ctime(tmm);
  hh[0]=tim[11];
  hh[1]=tim[12];
  hh[2]='\0';

  mm[0]=tim[14];
  mm[1]=tim[15];
  mm[2]='\0';

  ss[0]=tim[17];
  ss[1]=tim[18];
  ss[2]='\0';

  hour=atoi(hh);
  min=atoi(mm);
  sec=atoi(ss);

 h=hour;
 m=min;
 s=sec+1;

for(;h<=24;h++)
   {
	if(h==1)k=0+5;
	if(h==2)k=5+5;
	if(h==3)k=10+5;
	if(h==4)k=15+5;
	if(h==5)k=20+5;
	if(h==6)k=25+5;
	if(h==7)k=30+5;
	if(h==8)k=35+5;
	if(h==9)k=40+5;
	if(h==10)k=45+5;
	if(h==11)k=50+5;
	if(h==12)k=0;

	if(h==13)k=0+5;
	if(h==14)k=5+5;
	if(h==15)k=10+5;
	if(h==16)k=15+5;
	if(h==17)k=20+5;
	if(h==18)k=25+5;
	if(h==19)k=30+5;
	if(h==20)k=35+5;
	if(h==21)k=40+5;
	if(h==22)k=45+5;
	if(h==23)k=50+5;
	if(h==24)k=0;



	for(;m<=60;m++)
	   {

		for(;s<=60&&(!kbhit());s++)
		   {

			if(s>0)
			  {
				setcolor(11);    //11

			    if(k>0)
			      {
				if(m<=10)
				line(300,220,xcor[k-1],ycor[k-1]);
				if(m>10&&m<=20)
				line(300,220,xcor[k-2],ycor[k-2]);
				if(m>20&&m<=30)
				line(300,220,xcor[k-3],ycor[k-3]);
				if(m>30&&m<=40)
				line(300,220,xcor[k-4],ycor[k-4]);
				if(m>40&&m<=50)
				line(300,220,xcor[k-5],ycor[k-5]);

			      }
				if(m>0)
				line(300,220,xcor[m-1],ycor[m-1]);

				line(300,220,xcor[s-1],ycor[s-1]);
			  }


			setcolor(4);



			 if(m<10)
				line(300,220,xcor[k],ycor[k]);
			 if(m>10&&m<=20)
				line(300,220,xcor[k+1],ycor[k+1]);
			 if(m>20&&m<=30)
				line(300,220,xcor[k+2],ycor[k+2]);
			 if(m>30&&m<=40)
				line(300,220,xcor[k+3],ycor[k+3]);
			 if(m>40&&m<=50)
				line(300,220,xcor[k+4],ycor[k+4]);
			 if(m>50&&m<=60&&h!=11&&h!=23)
				line(300,220,xcor[k+5],ycor[k+5]);
			 if(m>50&&m<=60&&(h==11||h==23))
				line(300,220,xcor[0],ycor[0]);


			setcolor(13);
			if(m!=60)
				line(300,220,xcor[m],ycor[m]);
			if(m==60)
				line(300,220,xcor[0],ycor[0]);

			setcolor(0);
			if(s!=60)
			  {
				line(300,220,xcor[s],ycor[s]);
				sleep(1);
			  }
			if(s==60)
				line(300,220,xcor[0],ycor[0]);

		   }
	   s=0;
	   }
   m=0;
   }



getch();
closegraph();
return 0;
}

void clnum()
{
 settextstyle(1,0,5);
  setcolor(10);
 outtextxy(280,21,"12");
 outtextxy(385,45,"1");
 outtextxy(442,105,"2");
 outtextxy(465,188,"3");
 outtextxy(445,275,"4");
 outtextxy(382,342,"5");
 outtextxy(286,367,"6");
 outtextxy(195,339,"7");
 outtextxy(135,275,"8");
 outtextxy(115,188,"9");
 outtextxy(125,105,"10");
 outtextxy(190,40,"11");

}

void circles()
{
 circle(300,220,203);
 setfillstyle(1,14);
 floodfill(300,220,10);

 circle(300,220,150);
 setfillstyle(1,11);
 floodfill(300,220,10);

 setcolor(0);
  //circle(300,220,140);

}

/*lines()
{
line(300,220,285,80);    //.4
//line(300,220,270,82);     //.3
//line(300,220,255,87);    //.2
//line(300,220,240,91);   //.1
line(300,220,300,80);       //12

//line(300,220,314,81);
//line(300,220,326,82);
//line(300,220,340,87);
//line(300,220,355,93);
line(300,220,370,100);      //1

//line(300,220,381,106);
//line(300,220,392,113);
//line(300,220,402,125);
//line(300,220,412,136);
line(300,220,420,150);       //2

//line(300,220,428,163);
//line(300,220,434,177);
//line(300,220,435,192);
//line(300,220,440,205);
line(300,220,440,220);       //3

//line(300,220,440,235);
//line(300,220,438,249);
//line(300,220,434,263);
//line(300,220,430,275);
line(300,220,424,288);       //4

//line(300,220,414,299);
//line(300,220,408,311);
//line(300,220,396,320);
//line(300,220,384,330);
line(300,220,372,341);     //5

//line(300,220,358,348);
//line(300,220,345,352);
//line(300,220,330,358);
//line(300,220,315,360);
line(300,220,300,360);      //6

//line(300,220,285,360);
//line(300,220,270,358);
//line(300,220,255,352);
//line(300,220,240,348);
line(300,220,226,341);        //7

//line(300,220,216,333);
//line(300,220,206,325);
//line(300,220,195,315);
//line(300,220,185,303);
line(300,220,176,290);      //8

//line(300,220,172,278);
//line(300,220,167,266);
//line(300,220,163,252);
//line(300,220,161,237);
line(300,220,160,220);      //9

//line(300,220,160,206);
//line(300,220,162,190);
//line(300,220,167,172);
//line(300,220,173,157);
line(300,220,180,148);       //10

//line(300,220,188,137);
//line(300,220,195,125);
//line(300,220,205,115);
//line(300,220,218,108);
line(300,220,228,98);    //11

} */
